def permute(nums):
    def backtrack(start):
        # If we've reached the end of the array, we found a permutation
        if start == len(nums):
            result.append(list(nums))
            return
        
        for i in range(start, len(nums)):
            # Swap the current element with the starting element
            nums[start], nums[i] = nums[i], nums[start]
            # Recurse with the next element as the start
            backtrack(start + 1)
            # Swap back to restore the original array
            nums[start], nums[i] = nums[i], nums[start]

    result = []
    backtrack(0)
    return result

# Example test cases
nums1 = [1, 2, 3]
print("Example 1 Output:", permute(nums1))

nums2 = [0, 1]
print("Example 2 Output:", permute(nums2))

nums3 = [1]
print("Example 3 Output:", permute(nums3))
