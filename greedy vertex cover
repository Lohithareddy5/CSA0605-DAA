def greedy_vertex_cover(n, edges):
    # Initialize the vertex cover set
    vertex_cover = set()
    
    # Create a list of edges
    edge_list = edges.copy()
    
    while edge_list:
        # Take an arbitrary edge
        u, v = edge_list[0]
        
        # Add both vertices of the edge to the vertex cover
        vertex_cover.add(u)
        vertex_cover.add(v)
        
        # Remove all edges incident to u or v
        edge_list = [edge for edge in edge_list if u not in edge and v not in edge]
    
    return list(vertex_cover)

# Test Case 1
n1 = 5
m1 = 6
edges1 = [(0, 1), (0, 2), (1, 2), (1, 3), (2, 4), (3, 4)]
vertex_cover1 = greedy_vertex_cover(n1, edges1)
print("Vertex Cover:", vertex_cover1)  # Output: Vertex Cover: [1, 2, 3]

# Test Case 2
n2 = 4
m2 = 4
edges2 = [(0, 1), (0, 2), (1, 2), (2, 3)]
vertex_cover2 = greedy_vertex_cover(n2, edges2)
print("Vertex Cover:", vertex_cover2)  # Output: Vertex Cover: [0, 2]
